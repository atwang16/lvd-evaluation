import subprocess
import sys
import os

MIN_NUM_ARGS = 4
ROOT_PATH = os.path.abspath(os.path.join(os.getcwd(), os.pardir))
PROJECT_TREE = os.path.join(ROOT_PATH, "project_structure.txt")
directories = {"results_path": None, "datasets_path": None, "descriptors_path": None, "descriptors_executable": None}
results_path = None
image_db_path = None
detector_db_path = None
descriptors_parameter_file = None
descriptor_executable = None
destination_path = None
flags = {"-overwrite": "0"}


def generate_descriptors(desc, img_db, det_db):
    global directories, descriptors_parameter_file, image_db_path, detector_db_path, destination_path, flags
    args = [directories["descriptors_executable"], desc, descriptors_parameter_file, image_db_path,
            detector_db_path, destination_path, flags["-overwrite"]]
    print(desc + ": " + "extracting descriptors from " + img_db + ", with keypoints generated by " + det_db)
    print("***")
    subprocess.run(args)


# MAIN #

if __name__ == "__main__":
    if len(sys.argv) < MIN_NUM_ARGS:
        print("Usage: python3 build_descriptors.py detector_name desc_name database_name [-overwrite]")
        sys.exit(1)

    detector = sys.argv[1]
    desc_name = sys.argv[2]
    database = sys.argv[3]

    if detector == desc_name:
        res_folder_name = detector
    else:
        res_folder_name = detector + "_" + desc_name

    with open(PROJECT_TREE) as f:
        line = f.readline()
        while line != "":
            line_split = line.split("=")
            if len(line_split) >= 2:
                var = line_split[0].lower()
                directory = line_split[1].strip()
                if var in directories:
                    directories[var] = os.path.join(ROOT_PATH, directory)
            line = f.readline()

    for d in directories:
        if directories[d] is None:
            print("Error: could not find", directories[d].upper(), "in file:")
            print(" ", PROJECT_TREE)
            sys.exit(1)

    arg_index = MIN_NUM_ARGS
    while arg_index < len(sys.argv):
        for f in flags:
            if sys.argv[arg_index] == f:
                flags[f] = "1"
        arg_index += 1

    detector_db_path = os.path.join(directories["results_path"], detector, database)
    image_db_path = os.path.join(directories["datasets_path"], database)
    destination_path = os.path.join(directories["results_path"], res_folder_name)
    descriptors_parameter_file = os.path.join(directories["descriptors_path"], desc_name + "_parameters.txt")

    generate_descriptors(desc_name, database, detector)