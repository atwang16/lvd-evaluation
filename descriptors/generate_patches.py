import subprocess
import sys
import os

MIN_NUM_ARGS = 4
ROOT_PATH = os.path.abspath(os.path.join(os.getcwd(), os.pardir))
PROJECT_TREE = os.path.join(ROOT_PATH, "project_structure.txt")
directories = {"results_path": None, "datasets_path": None, "descriptors_path": None, "patches_executable": None}
results_path = None
image_db_path = None
detector_db_path = None
parameter_file = None
destination_path = None
patch_size = 41


def generate_descriptors(det, img_db, det_db, type):
    global directories, image_db_path, detector_db_path, destination_path, patch_size
    args = [directories["patches_executable"], image_db_path, detector_db_path, destination_path, patch_size, type]
    print(det + ": " + "extracting patches from " + img_db + ", with keypoints generated by " + det_db)
    print("***")
    subprocess.run(args)


# MAIN #

if __name__ == "__main__":
    if len(sys.argv) < MIN_NUM_ARGS:
        print("Usage: python3 generate_descriptors.py detector_name database_name type")
        sys.exit(1)

    detector = sys.argv[1]
    database = sys.argv[2]
    type = sys.argv[3]

    if type == "IMG":
        type = "0"
    elif type == "MAT":
        type = "1"
    else:
        print("Error: invalid type. Enter either IMG or MAT.")
        sys.exit(1)

    with open(PROJECT_TREE) as f:
        line = f.readline()
        while line != "":
            line_split = line.split("=")
            if len(line_split) >= 2:
                var = line_split[0].lower()
                directory = line_split[1].strip()
                if var in directories:
                    directories[var] = os.path.join(ROOT_PATH, directory)
            line = f.readline()

    for d in directories:
        if directories[d] is None:
            print("Error: could not find", d.upper(), "in file:")
            print(" ", PROJECT_TREE)
            sys.exit(1)

    detector_db_path = os.path.join(directories["results_path"], detector, database)
    image_db_path = os.path.join(directories["datasets_path"], database)
    destination_path = os.path.join(directories["results_path"], detector)
    parameter_file = os.path.join(directories["descriptors_path"], "patch_parameters.txt")

    with open(parameter_file) as f:
        line = f.readline()
        while line != "":
            line_split = line.split("=")
            if len(line_split) >= 2:
                var = line_split[0]
                value = line_split[1]
                if value[-1] == "\n":
                    value = value[:-1]
                if var == "PATCH_SIZE":
                    patch_size = value
            line = f.readline()

    generate_descriptors(detector, database, detector, type)